<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.domain.repository.template.mapper.EntityMapper">

    <update id="create" parameterType="java.lang.String">
        ${query}
    </update>

    <update id="drop" parameterType="java.lang.String">
        ${query}
    </update>

    <delete id="delete" parameterType="Long">
        delete from entity
        where id = #{id};
    </delete>

    <insert id="save">
        insert into entity (id, file_name, file_domain)
        values (#{id}, #{fileName}, #{fileDomain});
    </insert>

    <update id="update">
        update entity
        set name = #{template.name}
        where id = #{id};
    </update>

    <select id="findByName" parameterType="String" resultType="EntityDTO">
        select template.id, template.name, file_name, file_domain, template.member_id
        from entity
        join template on entity.id = template.id
        <where>
            <if test="name != null and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
        </where>
    </select>

    <select id="findByMemberId" parameterType="Long" resultType="EntityDTO">
        select template.id, template.name, file_name, file_domain, template.member_id
        from entity
        join template on entity.id = template.id
        where member_id = #{memberId}
    </select>

    <select id="findById" parameterType="Long" resultType="EntityDTO">
        select template.id, template.name, file_name, file_domain, template.member_id
        from entity
        join template on entity.id = template.id
        where template.id = #{id}
    </select>

    <select id="findAll" resultType="EntityDTO">
        select template.id, template.name, file_name, file_domain, template.member_id
        from entity
        join template on entity.id = template.id
    </select>

</mapper>



